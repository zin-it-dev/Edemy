name: CI workflow

on:
  push:
    branches: ["test"]
  pull_request:
    branches: ["test"]

jobs:
  django:
    runs-on: ubuntu-latest
    env:
      DJANGO_SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DJANGO_DEBUG: 1
      DJANGO_ALLOWED_HOSTS: "localhost,127.0.0.1"
      POSTGRES_ENGINE: "postgresql"
      POSTGRES_DB: "edemy"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: edemy
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        python-version: [3.11, 3.12]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/local.txt
        working-directory: ./server
      - name: Run Tests
        run: pytest
        working-directory: ./server

  react:
    runs-on: ubuntu-latest
    env:
      VITE_API_URL: ${{ secrets.API_URL }}
      VITE_APP_TITLE: ${{ secrets.APP_TITLE }}
    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm install
        working-directory: ./client/web
      - name: Run Unit Tests
        run: npm run test
        working-directory: ./client/web
      - name: Upload Coverage
        run: npm run coverage
        working-directory: ./client/web

  e2e:
    runs-on: ubuntu-latest
    needs: [react, django]
    env:
      VITE_API_URL: ${{ secrets.API_URL }}
      VITE_APP_TITLE: ${{ secrets.APP_TITLE }}
      CI: true
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci
        working-directory: ./client/web

      - name: Build React app
        run: npm run build
        working-directory: ./client/web

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        working-directory: ./client/web

      - name: Run Playwright E2E Tests
        run: npm run e2e:ci
        working-directory: ./client/web

      - name: Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: ./client/web/playwright-report
          retention-days: 30